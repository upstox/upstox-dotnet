/* 
 * OpenAPI definition
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = UpstoxClient.Client.SwaggerDateConverter;
namespace UpstoxClient.Model
{
    /// <summary>
    /// Response data for margin
    /// </summary>
    [DataContract]
        public partial class MarginData :  IEquatable<MarginData>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MarginData" /> class.
        /// </summary>
        public MarginData()
        {
        }
        
        /// <summary>
        /// Response data for instrument margin details
        /// </summary>
        /// <value>Response data for instrument margin details</value>
        [DataMember(Name="margins", EmitDefaultValue=false)]
        public List<Margin> Margins { get; private set; }

        /// <summary>
        /// Total margin required to execute the orders
        /// </summary>
        /// <value>Total margin required to execute the orders</value>
        [DataMember(Name="required_margin", EmitDefaultValue=false)]
        public double? RequiredMargin { get; private set; }

        /// <summary>
        /// Total margin after margin benefit
        /// </summary>
        /// <value>Total margin after margin benefit</value>
        [DataMember(Name="final_margin", EmitDefaultValue=false)]
        public double? FinalMargin { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MarginData {\n");
            sb.Append("  Margins: ").Append(Margins).Append("\n");
            sb.Append("  RequiredMargin: ").Append(RequiredMargin).Append("\n");
            sb.Append("  FinalMargin: ").Append(FinalMargin).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as MarginData);
        }

        /// <summary>
        /// Returns true if MarginData instances are equal
        /// </summary>
        /// <param name="input">Instance of MarginData to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MarginData input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Margins == input.Margins ||
                    this.Margins != null &&
                    input.Margins != null &&
                    this.Margins.SequenceEqual(input.Margins)
                ) && 
                (
                    this.RequiredMargin == input.RequiredMargin ||
                    (this.RequiredMargin != null &&
                    this.RequiredMargin.Equals(input.RequiredMargin))
                ) && 
                (
                    this.FinalMargin == input.FinalMargin ||
                    (this.FinalMargin != null &&
                    this.FinalMargin.Equals(input.FinalMargin))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Margins != null)
                    hashCode = hashCode * 59 + this.Margins.GetHashCode();
                if (this.RequiredMargin != null)
                    hashCode = hashCode * 59 + this.RequiredMargin.GetHashCode();
                if (this.FinalMargin != null)
                    hashCode = hashCode * 59 + this.FinalMargin.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
